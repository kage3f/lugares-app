openapi: 3.0.0
info:
  title: Places API
  version: 1.0.0
  description: API para gerenciar lugares
servers:
  - url: http://localhost:8000

paths:
  /places:
    get:
      summary: Retrieve a list of places
      operationId: getPlaces
      responses:
        '200':
          description: A JSON array of places
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place'
              examples:
                placesExample:
                  summary: Example response
                  value: 
                    - id: 1
                      name: "Praça"
                      slug: "praca"
                      city: "Belo Horizonte"
                      state: "MG"
                      created_at: "2024-03-22T03:52:55.000000Z"
                      updated_at: "2024-03-22T04:03:03.000000Z"
                    - id: 2
                      name: "Campo Futebol"
                      slug: "campo-futebol"
                      city: "São Paulo"
                      state: "SP"
                      created_at: "2024-03-22T04:44:46.000000Z"
                      updated_at: "2024-03-22T04:44:46.000000Z"
    post:
      summary: Creates a new place
      operationId: createPlace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 3
                  maxLength: 255
                  example: "Campo Futebol"
                city:
                  type: string
                  minLength: 3
                  maxLength: 255
                  example: "São Paulo"
                state:
                  type: string
                  maxLength: 2
                  example: "SP"
              required:
                - name
                - city
                - state
            examples:
              createRequest:
                summary: Example create request
                value:
                  name: "Campo Futebol"
                  city: "São Paulo"
                  state: "SP"
      responses:
        '201':
          description: Place created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Place'
        '400':
          description: Invalid input data
  /places/{id}:
    get:
      summary: Retrieve a place by its ID
      operationId: getPlaceById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the place to retrieve
      responses:
        '200':
          description: A place object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Place'
        '404':
          description: Place not found

    put:
      summary: Update a place by its ID
      operationId: updatePlaceById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the place to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceUpdateRequest'
      responses:
        '200':
          description: Place updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Place'
        '400':
          description: Invalid input data
        '404':
          description: Place not found

    delete:
      summary: Delete a place by its ID
      operationId: deletePlaceById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the place to delete
      responses:
        '200':
          description: Place deleted successfully
        '404':
          description: Place not found

components:
  schemas:
    Place:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "Praça"
        slug:
          type: string
          example: "praca"
        city:
          type: string
          example: "Belo Horizonte"
        state:
          type: string
          example: "MG"
        created_at:
          type: string
          format: date-time
          example: "2024-03-22T03:52:55.000000Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-03-22T04:03:03.000000Z"
